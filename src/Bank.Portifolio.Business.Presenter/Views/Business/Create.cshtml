@model Bank.Portifolio.Business.Application.ViewModels.BusinessViewModel


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BusinessViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.TypeBusiness, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TypeBusiness, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TypeBusiness, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <h4 class="control-label col-md-2">Clients</h4>
        <div class="col-md-2">
            @Html.DropDownList("Clients", (IEnumerable<SelectListItem>)ViewBag.Clients, new { id = "ddlClients", @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <h4 class="control-label col-md-2">Portifolio</h4>
        <div class="col-md-2">
            @Html.DropDownList("Portifolio", (IEnumerable<SelectListItem>)ViewBag.Protifolio, new { id = "ddlPortifolio", @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ValueBusiness, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ValueBusiness, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ValueBusiness, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
